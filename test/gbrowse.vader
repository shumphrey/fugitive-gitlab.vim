Before:
    Save g:fugitive_gitlab_domains
    Save g:fugitive_browse_handlers

    unlet! g:fugitive_browse_handlers
    unlet! g:fugitive_gitlab_domains

    unlet! g:loaded_fugitive_gitlab
    unlet! g:autoloaded_fugitive_gitlab_utils
    unlet! g:autoloaded_fugitive_gitlab_fugitive
    runtime plugin/gitlab.vim
    runtime autoload/gitlab/utils.vim
    runtime autoload/gitlab/fugitive.vim

After:
    Restore g:fugitive_gitlab_domains
    Restore g:fugitive_browse_handlers

Execute (GBrowse - blob):
    let opts = {
      \'remote': 'git@gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - blob with range):
    let opts = {
      \'remote': 'git@gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'a935a734765575b33da6c50fe8d0175e70e0e542',
      \'type': 'blob',
      \'path': 'myfile.vim',
      \'line1': 1,
      \'line2': 3,
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/a935a734765575b33da6c50fe8d0175e70e0e542/myfile.vim#L1-3', url

Execute (GBrowse - directory tree):
    let opts = {
      \'remote': 'git@gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'tree',
      \'path': 'path1/path2'
    \}
    let url = g:fugitive_browse_handlers[0](opts)
    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/tree/master/path1/path2', url

Execute (GBrowse - commit type):
    let opts = {
      \'remote': 'git@gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'a935a734765575b33da6c50fe8d0175e70e0e542',
      \'type': 'commit',
    \}
    let url = g:fugitive_browse_handlers[0](opts)
    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/commit/a935a734765575b33da6c50fe8d0175e70e0e542', url

Execute (GBrowse - private ssh remote):
    let opts = {
      \'remote': 'git@my.gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual '', url

    let g:fugitive_gitlab_domains = ['https://my.gitlab.com']
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://my.gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

    unlet g:fugitive_gitlab_domains

Execute (GBrowse - https remote):
    let opts = {
      \'remote': 'https://gitlab.com/shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - https remote with @):
    let opts = {
      \'remote': 'https://shumphrey@gitlab.com/shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - Long form ssh remote):
    let opts = {
      \'remote': 'ssh://git@gitlab.com/shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - Long form ssh remote with non-standard ssh user):
    let opts = {
      \'remote': 'ssh://gitlab@gitlab.com/shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - Long form ssh remote with non-standard port):
    let opts = {
      \'remote': 'ssh://git@gitlab.com:222/shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - Short form ssh remote with non-standard ssh user):
    let opts = {
      \'remote': 'gitlab@gitlab.com:shumphrey/fugitive-gitlab.vim.git',
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}
    let url = g:fugitive_browse_handlers[0](opts)

    AssertEqual 'https://gitlab.com/shumphrey/fugitive-gitlab.vim/-/blob/master/myfile.vim', url

Execute (GBrowse - Does not match non-gitlab remote):
    let opts = {
      \'commit': 'master',
      \'type': 'blob',
      \'path': 'myfile.vim'
    \}

    let url = g:fugitive_browse_handlers[0](opts)
    AssertEqual '', url

    let remotes = [
        \ 'git@github.com/shumphrey/fugitive-gitlab.vim.git',
        \ 'git@github.com:12345/shumphrey/fugitive-gitlab.vim.git',
        \ 'user@github.com:12345/shumphrey/fugitive-gitlab.vim.git',
        \ 'https://user:pass@github.com:443/shumphrey/fugitive-gitlab.vim.git',
        \ 'https://user@github.com/shumphrey/fugitive-gitlab.vim.git',
        \ 'https://github.com/shumphrey/fugitive-gitlab.vim.git',
    \ ]

    for remote in remotes
        let opts.remote = remote

        let url = g:fugitive_browse_handlers[0](opts)
        AssertEqual '', url
    endfor

" vim: set ts=4 sw=4 et :
